https://codingbat.com/prob/p126880
Question-1:
doubleChar
prev  |  next  |  chance

Given a string, return a string where for every char in the original, there are two chars.

doubleChar("The") → "TThhee"
doubleChar("AAbb") → "AAAAbbbb"
doubleChar("Hi-There") → "HHii--TThheerree"

Answer-1
public String doubleChar(String str) {
  
  String result="";
  
  for(int i=0;i<str.length();i++){
    result = result+str.charAt(i)+str.charAt(i);
  }
  return result;
}

Question-2:
countHi
prev  |  next  |  chance

Return the number of times that the string "hi" appears anywhere in the given string.

countHi("abc hi ho") → 1
countHi("ABChi hi") → 2
countHi("hihi") → 2

Answer:
public int countHi(String str) {
  
  int count=0;
  for(int i=0;i<str.length()-1;i++){
    if(str.substring(i,i+2).equals("hi")){
      count++;
    }
  }
  return count;
}

Question-3:
catDog
prev  |  next  |  chance

Return true if the string "cat" and "dog" appear the same number of times in the given string.

catDog("catdog") → true
catDog("catcat") → false
catDog("1cat1cadodog") → true

Answer:
public boolean catDog(String str) {
  
  int catc=0;
  int dogc=0;
  
  for(int i=0; i<str.length()-2; i++){
    if(str.substring(i,i+3).equals("cat")){
      catc++;
    }
    if(str.substring(i,i+3).equals("dog")){
      dogc++;
    }
  }
  
  return (catc==dogc);
  
}

Question-4:
countCode
prev  |  next  |  chance

Return the number of times that the string "code" appears anywhere in the given string, except we'll accept any letter for the 'd', so "cope" and "cooe" count.

countCode("aaacodebbb") → 1
countCode("codexxcode") → 2
countCode("cozexxcope") → 2

Answer:
public int countCode(String str) {
  
  int count=0;
  
  for(int i=0;i<str.length()-3;i++){
    if(str.substring(i,i+2).equals("co") && str.substring(i+3,i+4).equals("e")){
        count++;
    }
  }
  
  return count;
}

Question-5:
endOther
prev  |  next  |  chance

Given two strings, return true if either of the strings appears at the very end of the other string, ignoring upper/lower case differences (in other words, the computation should not be "case sensitive"). Note: str.toLowerCase() returns the lowercase version of a string.

endOther("Hiabc", "abc") → true
endOther("AbC", "HiaBc") → true
endOther("abc", "abXabc") → true

Answer:
public boolean endOther(String a, String b) {
  
  int alen = a.length();
  int blen = b.length();
  a = a.toLowerCase();
  b = b.toLowerCase();
  
  if(alen > blen){
    return (a.substring(alen-blen).equals(b));
  }else{
    return (b.substring(blen-alen).equals(a));
  }
}

Reference for another approach:
http://www.javaproblems.com/2013/11/java-string-2-xyzthere-codingbat.html

Question-6:
xyzThere
prev  |  next  |  chance

Return true if the given string contains an appearance of "xyz" where the xyz is not directly preceeded by a period (.). So "xxyz" counts but "x.xyz" does not.

xyzThere("abcxyz") → true
xyzThere("abc.xyz") → false
xyzThere("xyz.abc") → true

Answer:
public boolean xyzThere(String str) {
  
  if(str.length()< 3) return false;
  
  for(int i=0; i<str.length()-2;i++){
    if(str.substring(i,i+3).equals("xyz")){
      if(i==0){  //since xyz is found, i should be now 0
        return true;
      }else if(str.charAt(i-1)!='.'){//if not zero check for presence of '.'
        return true;
        }
    }
  }
  
  return false;
}

Question-7:
bobThere
prev  |  next  |  chance

Return true if the given string contains a "bob" string, but where the middle 'o' char can be any char.

bobThere("abcbob") → true
bobThere("b9b") → true
bobThere("bac") → false

Answer:
public boolean bobThere(String str) {
  
  for(int i=0; i<str.length()-2;i++){
    if(str.charAt(i)=='b' && str.charAt(i+2)=='b'){
      return true;
    }
  }
  return false;
  
  // for(int i=0; i<str.length()-2;i++){
  //   if(str.length()==3 && str.substring(i).equals('b') && 
  //   str.substring(str.length()-1).equals('b')){
  //     return true;
  //   }
  // }
  // return false;
  
}

